// Automatically generated by MockGen. DO NOT EDIT!
// Source: modules/db/database.go

package mock_db

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of dbInterface interface
type MockdbInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockdbInterfaceRecorder
}

// Recorder for MockdbInterface (not exported)
type _MockdbInterfaceRecorder struct {
	mock *MockdbInterface
}

func NewMockdbInterface(ctrl *gomock.Controller) *MockdbInterface {
	mock := &MockdbInterface{ctrl: ctrl}
	mock.recorder = &_MockdbInterfaceRecorder{mock}
	return mock
}

func (_m *MockdbInterface) EXPECT() *_MockdbInterfaceRecorder {
	return _m.recorder
}

func (_m *MockdbInterface) SaveProduct() error {
	ret := _m.ctrl.Call(_m, "SaveProduct")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockdbInterfaceRecorder) SaveProduct() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SaveProduct")
}

func (_m *MockdbInterface) SaveUser() error {
	ret := _m.ctrl.Call(_m, "SaveUser")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockdbInterfaceRecorder) SaveUser() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SaveUser")
}

func (_m *MockdbInterface) SaveExchange() (bool, error) {
	ret := _m.ctrl.Call(_m, "SaveExchange")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockdbInterfaceRecorder) SaveExchange() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SaveExchange")
}
